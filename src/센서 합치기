import time
import RPi.GPIO as GPIO
import RPi.GPIO as PWM
import threading
from picamera import PiCamera
import spidev


#18 23 24 12
magnetic = 25
coil_A_1_pin = 18
coil_A_2_pin = 23
coil_B_1_pin = 24
coil_B_2_pin = 12
SERVO_PIN = 16
pirPin = 21
water_sensor = 13
co_mo = 22

GPIO.setwarnings(False)
GPIO.setmode(GPIO.BCM)
GPIO.setup(magnetic, GPIO.IN)
GPIO.setup(coil_A_1_pin, GPIO.OUT)
GPIO.setup(coil_A_2_pin, GPIO.OUT)
GPIO.setup(coil_B_1_pin, GPIO.OUT)
GPIO.setup(coil_B_2_pin, GPIO.OUT)
GPIO.setup(SERVO_PIN, GPIO.OUT) 
servo = GPIO.PWM(SERVO_PIN, 50) 
GPIO.setup(pirPin,GPIO.IN)
GPIO.setup(pirPin, GPIO.IN, GPIO.PUD_UP)
GPIO.setup(water_sensor, GPIO.IN)
GPIO.setup(co_mo, GPIO.OUT) 

servo.start(0) 
camera = PiCamera()
spi = spidev.SpiDev()
spi.open(0,0)
p = GPIO.PWM(co_mo, 50)
p.start(0)

delay=0.01
steps = 50
cheak = 1
counter = 1
water_delay = 0.5
pad_channel = 0
spi.max_speed_hz = 1000000
rain_cheak = 0
servo_cheak = 0

def setStep (w1, w2, w3, w4):
  GPIO.output(coil_A_1_pin, w1)
  GPIO.output(coil_A_2_pin, w2)
  GPIO.output(coil_B_1_pin, w3)
  GPIO.output(coil_B_2_pin, w4)

def staping_motor():
	
	while True:
		if cheak == 0 or rain_cheak == 1:
			setStep(1,0,1,0)
			time.sleep(delay)
			setStep(1,0,0,1)
			time.sleep(delay)
			setStep(0,1,0,1)
			time.sleep(delay)
			setStep(0,1,1,0)
			time.sleep(delay)
			time.sleep(delay)
		
def servo_motor():
	servo.ChangeDutyCycle(12.5)
	time.sleep(1)
	servo.ChangeDutyCycle(2.5)
	time.sleep(1)
	servo.ChangeDutyCycle(12.5)
	time.sleep(1)
	
def magnetic_code():
	global cheak
	global servo_cheak
	
	sensor_change_detect = 0
	
	print("magnetic on")
	try :
		while True:
			if GPIO.input(magnetic)==0:
				if sensor_change_detect != 2:
					#print("11111close")
					cheak = 1
					servo_cheak = 1
					time.sleep(1)
					

			else : 
				cheak = 0
				servo_cheak = 0
				sensor_change_detect = 2
				#print("one open\n")
				
				
				sensor_change_detect = 0
				time.sleep(1)
	except Exception as ex :
		print("error",ex);
		
def mo():
	try:
		for dc in range(0,101,5):
			p.ChangeDutyCycle(dc)
			time.sleep(0.1)
			
	except KeyboardInterrupt:
		pass
	p.stop()
	
def camotion():
	input_state=GPIO.input(pirPin)
	if input_state == True:
		print("Motion detected")
		camera.start_preview()
		camera.resolution = (640, 480)
		for i in range(10):
			time.sleep(10)
			camera.capture('/home/pi/Desktop/image%s.jpe' % i)
			camera.stop_preview()
		camera.stop_preview()
	else:
		print("no motion")
	time.sleep(1)

def rain():
	global rain_cheak
	while True:
		try:
			if GPIO.input(water_sensor):
				active_time = time.time()
				print("no rain")
				print(active_time)
				rain_cheak = 0
			else :
				active_time = time.time()
				print("rain")
				print(active_time)
				rain_cheak = 1	
		except KeyboardInterrupt:
			print ("\nUser Halt")
		time.sleep(1)
	
def readadc(adcnum):
	if adcnum > 7 or adcnum < 0:
		return -1
	r = spi.xfer([1, 8 + adcnum << 4, 0])
	data = ((r[1] & 3) << 8) + r[2]
	return data
	
	
def fsr():
	while True:
		try:
			while True:
				pad_value = readadc(pad_channel)
				print("--------------------------------")
				print("Pressure Pad Value : %d" % pad_value)
				if pad_value>700:
					servo_motor()
					mo()
					camotion()
					
				time.sleep(water_delay)
		except KeyboardInterrupt:
				pass 

thread1 = threading.Thread(target = staping_motor)
thread2 = threading.Thread(target = magnetic_code)
thread3 = threading.Thread(target = rain)
thread4 = threading.Thread(target = fsr)
 

thread1.start()		
thread2.start()			
thread3.start()
thread4.start()

